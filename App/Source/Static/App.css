
:root {

    --Color-Tertiary-Raw : 39 , 50 , 68 ;

    --Color-Secondary : #ffffff ;
    --Color-Tertiary : rgb(var(--Color-Tertiary-Raw)) ;
    --Color-Primary : #eceff4 ;
    --Color-Accent : #303e54 ;
    --Text-Secondary : #ffffff ;
    --Text-Primary : #020203 ;
}

* {
    -webkit-tap-highlight-color: transparent;
    user-select : none ;
}

html {

    background : var( --Color-Primary ) ;
    color : var( --Color-Primary ) ;

    font-family : monospace ;
}

body {

    height : 100dvh ;
    width : 100dvw ;

    margin : 0 ;
}

label > input[ type = checkbox ]{
    display : none ;
}

::-webkit-scrollbar {
    display: none;
}



.button {
    user-select : none ;
    cursor : pointer ;
    position : relative ;
    z-index : 0 ;
    transition: all 0.16s ease;
}

.button.shadow:is( :hover , :focus ){
    transform : translateY( -0.1rem ) ;
    filter: drop-shadow( 0px 3px 2px rgba( var(--hover) , 20% )) ;
}

.button.fill::before {
    content : '' ;
    position : absolute ;
    inset : 0 ;
    background: rgb( 39 , 50 , 68 ) ;
    transition: all 0.16s ease;
    transform-origin: center;
    transform: scale(0);
    border-radius: 50%;
    z-index : -1 ;
}
  .button.fill:is(:hover,:has(input:checked))::before{
    transform: scale(1);
  }










#Main {

    justify-content : center ;
    align-items : center ;
    display : flex ;

    height : 100% ;
    width : 100% ;
}


.Schedule--Warning {

    border-radius : 0.5rem ;

    min-height : 50% ;
    height : fit-content ;

    max-width : min(1000px,90%) ;
    width : 100% ;

    color : var(--Text-Primary) ;

    background : var(--Color-Secondary ) ;
    padding: 3rem;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    font-weight: bold;
}


.Schedule--Wrapper {

    border-radius : 0.5rem ;

    min-height : 50% ;
    height : fit-content ;

    max-width : min(1000px,90%) ;
    width : 100% ;

    grid-template-columns : 1fr 1fr auto ;
    grid-template-rows : auto auto 1fr ;
    grid-gap : 0 1rem ;
    display : grid ;

    overflow : hidden ;

    grid-template-areas :
        'Beauticians Details Actions'
        'Weekdays Details Actions'
        'Appointments Details Actions' ;
}


@media screen and ( width < 1000px ){

    .Schedule--Wrapper {

        grid-template-columns: 1fr auto;
        grid-template-rows: repeat(3,auto) 1fr ;
        grid-template-areas:
            'Beauticians Actions'
            'Weekdays Actions'
            'Appointments Actions'
            'Details Actions';
    }
}

.Schedule--Wrapper > div {

    background : var(--Color-Secondary ) ;
    padding : 0.5rem ;
}


.Schedule--Wrapper > .Schedule--Actions {

    grid-area : Actions ;

    border : var(--Color-Tertiary ) 2px solid ;

    border-radius : 0 0.5rem 0.5rem 0 ;
    border-width : 0 2px 2px 0 ;
}

.Schedule--Wrapper .Schedule--Help {
    --hover : var(--Color-Tertiary-Raw) ;
}

.Schedule--Wrapper > .Schedule--Weekdays {

    grid-area : Weekdays ;
    padding: 2rem;

}

.Schedule--Weekdays .Widget {
    display: flex;
    justify-content: center;
    flex-direction: column;
    gap : 1rem ;
    width: fit-content;
    margin: 0 auto;
}

.Schedule--Weekdays .Week {
    display: grid;
    grid-template-columns: auto 3fr 7fr auto;
    grid-gap: 1.5rem;
    align-items: center;
}


.Schedule--Weekdays .Week .Display {
    font-size: 1.3rem;
    color: var(--Text-Primary);
    font-weight: bold;
    text-align: center;
    word-spacing: -4px;
}

.Schedule--Weekdays .Week .button {

    width: 2rem;
    aspect-ratio: 1;
    border: var(--Color-Tertiary) solid 1px;
    border-radius: 0.4rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.Schedule--Weekdays .Week .button svg {
    height: 1.2rem;
    width: 1.2rem;
    color: var(--Color-Tertiary);
    stroke-width: 0;
}


.Schedule--Weekdays .Week .button:active {
    background : var(--Color-Tertiary) ;
}

.Schedule--Weekdays .Week .button:active svg {
    color: var(--Text-Secondary);
}

.Schedule--Weekdays .Days {

    max-width : fit-content ;

    grid-template-columns: repeat(7,1fr);
    display: grid;
    align-self: center;

    border-radius: 0.4rem;
    font-weight : bold ;
}

@media screen and ( width < 460px ){

    .Schedule--Weekdays .Widget {
        gap : 2rem ;
        width : 100% ;
    }

    .Schedule--Weekdays .Week {
        grid-template-columns: auto 1fr auto;
        grid-template-rows: 1fr 1fr;
        grid-template-areas:
            'left week right'
            'left range right';
        grid-gap: 0.5rem 1.5rem;
    }

    .Schedule--Weekdays .Week .button:first-of-type {
        grid-area : left ;
    }

    .Schedule--Weekdays .Week .button:last-of-type {
        grid-area : right ;
    }


}


@media screen and ( width < 600px ){

    .Schedule--Weekdays .Week .Display {
        font-size: 1.1rem;
    }

    .Schedule--Weekdays .Days {
        grid-template-columns: repeat(8,1fr);
        grid-template-rows: repeat(2,1fr);
        grid-gap: 0.5rem 0;

        grid-template-areas:
            'Mon Mon Tue Tue Wed Wed Thu Thu'
            'a Fri Fri Sat Sat Sun Sun b';
            max-width: unset;
        width: 100%;
    }

    #Weekday-Monday { grid-area : Mon ; }
    #Weekday-Tuesday { grid-area : Tue ; }
    #Weekday-Wednesday { grid-area : Wed ; }
    #Weekday-Thursday { grid-area : Thu ; }
    #Weekday-Friday { grid-area : Fri ; }
    #Weekday-Saturday { grid-area : Sat ; }
    #Weekday-Sunday { grid-area : Sun ; }

    #Weekday-Friday {
        border-width: 1px;
        border-radius: 0.4rem 0 0 0.4rem;
    }

    #Weekday-Thursday {
        border-width: 1px 1px 1px 0 ;
        border-radius: 0 0.4rem 0.4rem 0;
    }
}

.Schedule--Weekdays .Day {
    padding: 0.5rem 1rem;
    background: transparent;
    border: 0 solid var(--Color-Accent);
    border-width: 1px 1px 1px 0;
    color: var(--Text-Primary);
    text-align : center ;
}


.Schedule--Weekdays .Day:has(input:checked) {
    background:var(--Color-Tertiary);
    color: var(--Text-Secondary);
}

.Schedule--Weekdays .Day:first-child {
    border-width: 1px ;
    border-radius: 0.4rem 0 0 0.4rem;
}

.Schedule--Weekdays .Day:last-child {
    border-width: 1px 1px 1px 0 ;
    border-radius: 0 0.4rem 0.4rem 0;
}



.Schedule--Wrapper > .Schedule--Details {

    grid-area : Details ;

    background : var( --Color-Tertiary ) ;
}

.Schedule--Wrapper > .Schedule--Appointments {

    grid-area : Appointments ;
}

@media screen and ( width >= 1000px ) {

    .Schedule--Wrapper > .Schedule--Appointments {

        border : var( --Color-Tertiary ) 2px solid ;

        border-radius : 0 0 0 0.5rem ;
        border-width : 0 0 2px 0 ;
    }
}


.Schedule--Wrapper > .Schedule--Appointments {
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    overflow-y: scroll;
    max-height: 20rem;
    align-items: center;
}

.Appointment {

    padding: 0.6rem 1rem;
    background: transparent;
    border: 1px solid var(--Color-Accent);
    color: var(--Text-Primary);
    text-align: center;
    border-radius: 0.3rem;
    max-width: 40rem;
    min-height: 2rem;
}

.Appointment > [ data-type = 'order' ]{
    font-weight : bold ;
}

.Appointment > [ data-type = 'name' ]{
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1ch;
    align-content: flex-start;
    align-self: center;
    line-break: anywhere;

}


.Appointment > :is([ data-type = 'time' ],[ data-type = 'duration' ]){
    white-space: nowrap ;
}


@media screen and ( width >= 1000px ){

    .Appointment {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: center;
        gap: 1.5rem;
    }
}

@media screen and ( width < 1000px ){

    .Appointment {
        display: grid;

        grid-template-rows: 1fr 1fr;
        grid-template-columns: auto 1fr auto;
        grid-template-areas:
            'order name status'
            'time name duration';
        padding: 1rem;
        grid-gap: 1rem 2.5rem;
    }

    .Appointment > [ data-type = 'duration' ]{
        grid-area : duration ;
    }

    .Appointment > [ data-type = 'time' ]{
        grid-area : time ;
    }

    .Appointment > [ data-type = 'order' ]{
        grid-area : order ;
        text-align : left ;
    }

    .Appointment > [ data-type = 'status' ]{
        grid-area : status ;
    }

    .Appointment > [ data-type = 'name' ]{
        grid-area : name ;
    }
}

@media screen and ( width < 500px ){

    .Appointment {

        grid-template-rows: 1fr 1fr 1fr;
        grid-template-columns: 2rem auto auto;
        grid-template-areas:
            'order order name'
            'time time name'
            'status duration name';
        padding: 1rem;
        grid-gap: 1rem 0.5rem;
        width: calc(100% - 2rem - 2px);
    }

    .Appointment > [ data-type = 'time' ]{
        text-align : left ;
    }

    .Appointment > [ data-type = 'name' ]{
        margin-left: 1rem;
    }
}





.Schedule--Wrapper > .Beautician-Selection {

    grid-area : Beauticians ;

    padding: 2rem 2rem 1rem 2rem;

    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap : 2rem ;
}

.Beautician-Selection > label {
    height: 5rem;
    width: 5rem;
    background: transparent ;
    color : var( --Text-Primary ) ;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    overflow : hidden ;
}

.Beautician-Selection > label:is(:hover,:has(input:checked)) {
    color : var( --Text-Secondary ) ;
}

.Beautician-Selection > label::after {
    content : '' ;
    aspect-ratio: 1;
    position: absolute;
    inset : 0;
    border-radius: 50%;
    border: 2px solid rgb( 39 , 50 , 68 ) ;
    z-index : -2 ;
}

.Beautician-Selection > label:after {
    --hover : rgb( 39 , 50 , 68 ) ;
}
